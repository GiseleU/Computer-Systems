2,0,6,0.000000,0,6,0.000000,0,11,0.000000,0,11,0.000000
4,0,44,0.000000,0,44,0.000000,0,42,0.000000,0,42,0.000000
8,0,154,0.000000,0,154,0.000000,0,139,0.000000,0,139,0.000000
16,0,430,0.000000,0,430,0.000000,0,378,0.000000,0,378,0.000000
32,0,1164,0.000000,0,1164,0.000000,0,1079,0.000000,0,1079,0.000000
64,0,3070,0.000000,0,3070,0.000000,0,2795,0.000000,0,2795,0.000000
128,0,7324,0.000000,0,7324,0.000000,0,7188,0.000000,0,7188,0.000000
256,0,17222,0.000000,0,17222,0.000000,0,18522,0.000000,0,18522,0.000000
512,0,39530,0.000000,0,39530,0.000000,0,38994,0.000000,0,38994,0.000000
1024,0,89858,0.000000,0,89858,0.000000,0,93004,0.000000,0,93004,0.000000
2048,0,200220,0.000000,0,200220,0.000000,0,202388,0.000000,0,202388,0.000000
4096,0,441126,0.000000,0,441126,0.000000,0,431784,0.000000,0,431784,0.000000
8192,0,965550,0.000000,0,965550,0.000000,0,1000443,0.000000,0,1000443,0.000000
16384,12882,2095698,0.0061147,8207,2095698,0.003916,50,2168336,0.000023,48,2168336,0.000022
32768,75741,4517938,0.016765,49235,4517938,0.010898,175,4607932,0.000038,144,4607932,0.000031
65536,263081,9694558,0.027137,165051,9694558,0.017025,479,9968623,0.000048,398,9968623,0.000040
131072,749110,20703854,0.036182,556115,20703854,0.026860,1286,21569497,0.000060,1036,21569497,0.000048
262144,1922483,44023584,0.043669,1758457,44023584,0.039944,2910,45707946,0.000064,2386,45707946,0.000052

Quick sort seems to perform better; this probably has to do with the fact that quick sort has good cache locality. 
For LRU, there are no cache misses up to a certain extent (where the loop does not fit in the cache), and for RANDOM, the cache misses keep going up at a consistent pace. 